#!/bin/bash

# Copyright (C) 2015 NIWA Hideyuki

LIBDIR="/var/lib/fulcon/"

# check options
FLG_I=0

while getopts i OPT
do
  case $OPT in
    "i" ) FLG_I=1;;
  esac
done

shift `expr $OPTIND - 1`

usage()
{
	echo "usage: clone [ -i ] BASENAME NAME "
}

if [ $# -eq 2 ]; then
	BASENAME=$1
	NAME=$2
else
	usage
	sleep 5
	exit -1
fi

docker ps --no-trunc | awk '(NR>1){ printf "%s\n",$NF }' | egrep $NAME
if [ $? -eq 0 ]; then
	echo "error: already started" $NAME 
	sleep 5
	exit -1
fi

docker ps -a --no-trunc | awk '(NR>1){ printf "%s\n",$NF }' | egrep $NAME
if [ $? -eq 0 ]; then
	echo "error: already existed" $NAME 
	sleep 5
	exit -1
fi

CPUSET=`cat /sys/fs/cgroup/cpuset/cpuset.cpus`
OPTCPUSET=`docker run --help | egrep '\-\-cpuset' | egrep -v mem | awk '{print $1}' | awk -F '=' '{print $1}'`

IMAGE=`docker ps -a --no-trunc | awk '(NR>1){if($NF=="'$BASENAME'"){split($2,ar,":");\
	split(ar[1], ar2, "-"); printf "%s",ar2[1] }}'`

start_docker() {
	docker run -it ${OPTCPUSET}=${CPUSET} -c 100 -m 512m \
	--name $NAME --hostname $NAME \
	-v /sys/fs/cgroup:/sys/fs/cgroup:ro \
	--cap-drop=ALL \
	--cap-add=AUDIT_CONTROL \
	--cap-add=AUDIT_WRITE \
	--cap-add=BLOCK_SUSPEND \
	--cap-add=CHOWN \
	--cap-add=DAC_OVERRIDE \
	--cap-add=DAC_READ_SEARCH \
	--cap-add=FOWNER \
	--cap-add=FSETID \
	--cap-add=IPC_LOCK \
	--cap-add=IPC_OWNER \
	--cap-add=KILL \
	--cap-add=LEASE \
	--cap-add=LINUX_IMMUTABLE \
	--cap-add=MAC_ADMIN \
	--cap-add=MAC_OVERRIDE \
	--cap-add=MKNOD \
	--cap-add=NET_ADMIN \
	--cap-add=NET_BIND_SERVICE \
	--cap-add=NET_BROADCAST \
	--cap-add=NET_RAW \
	--cap-add=SETFCAP \
	--cap-add=SETGID \
	--cap-add=SETPCAP \
	--cap-add=SETUID \
	--cap-add=SYS_ADMIN \
	--cap-add=SYS_BOOT \
	--cap-add=SYS_CHROOT \
	--cap-add=SYS_MODULE \
	--cap-add=SYS_NICE \
	--cap-add=SYS_PACCT \
	--cap-add=SYS_PTRACE \
	--cap-add=SYS_RAWIO \
	--cap-add=SYS_RESOURCE \
	--cap-add=SYS_TIME \
	--cap-add=SYS_TTY_CONFIG \
	--cap-add=SYSLOG \
	--cap-add=WAKE_ALARM \
	--privileged \
	$IMAGE-$NAME /sbin/init
	mkdir -p $LIBDIR/container/$NAME/resource
	echo $CPUSET > $LIBDIR/container/$NAME/resource/cpuset
	echo "100000" > $LIBDIR/container/$NAME/resource/cpu
	echo "512m" > $LIBDIR/container/$NAME/resource/mem
}

if [ $FLG_I -eq 1 ]; then
	start_docker
else
	(start_docker < /dev/tty >& /dev/null)&
 	stty sane
	echo "cloned:" $NAME
fi

(docker rmi `docker images | grep '<none>' | awk '{print$3}' ` ) >& /dev/null
printf "\0"
stty sane

exit 0


