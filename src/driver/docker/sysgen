#!/bin/bash 

# Copyright (C) 2015 NIWA Hideyuki

LIBDIR="/var/lib/fulcon/"

# check options
FLG_I=0

while getopts i OPT
do
  case $OPT in
    "i" ) FLG_I=1;;
  esac
done

shift `expr $OPTIND - 1`

usage()
{
	echo "usage: sysgen [ -i ] NAME IMAGE"
}

if [ $# -eq 2 ]; then
	NAME=$1
else
	usage
	sleep 5
	exit -1
fi

IMAGE=$2

docker ps | awk '(NR>1){ if ($NF == "'$NAME'"){exit -1} }'
if [ $? -ne 0 ]; then
	echo "error: already started" $NAME 
	sleep 5
	exit -1
fi

docker ps -a | awk '(NR>1){ if ($NF == "'$NAME'"){exit -1} }'
if [ $? -ne 0 ]; then
	echo "error: already existed" $NAME 
	sleep 5
	exit -1
fi

CPUSET=`cat /sys/fs/cgroup/cpuset/cpuset.cpus`
OPTCPUSET=`docker run --help | egrep '\-\-cpuset' | egrep -v mem | awk '{print $1}' | awk -F '=' '{print $1}'`

start_docker() {
	docker run -it ${OPTCPUSET}=${CPUSET} -c 100 -m 512m \
	--name $NAME --hostname $NAME \
	-v /sys/fs/cgroup:/sys/fs/cgroup:ro \
        --cap-add=ALL \
	--privileged \
	$IMAGE /sbin/init 
	mkdir -p $LIBDIR/container/$NAME/resource
	echo $IMAGE >  $LIBDIR/container/$NAME/imagename
	echo $CPUSET > $LIBDIR/container/$NAME/resource/cpuset
	echo "100000" > $LIBDIR/container/$NAME/resource/cpu
	echo "512m" > $LIBDIR/container/$NAME/resource/mem
}

if [ $FLG_I -eq 1 ]; then
	start_docker
else
	MSG=`start_docker < /dev/tty 2>&1 ` & 
	if [ $? -eq 0 ]; then
		stty sane;
		echo "sysgened:" $NAME;
	else
		stty sane;
		echo "error: can't sysgened" $NAME
		echo $MSG
	fi
fi

exit 0


